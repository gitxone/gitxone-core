package completion

var gitCommands = []string{
	"add",
	"am",
	"annotate",
	"apply",
	"archimport",
	"archive",
	"bisect",
	"blame",
	"branch",
	"bundle",
	"cat-file",
	"check-attr",
	"check-ignore",
	"check-mailmap",
	"check-ref-format",
	"checkout",
	"checkout-index",
	"cherry",
	"cherry-pick",
	"citool",
	"clean",
	"clone",
	"column",
	"commit",
	"commit-graph",
	"commit-tree",
	"config",
	"count-objects",
	"credential",
	"credential-cache",
	"credential-netrc",
	"credential-osxkeychain",
	"credential-store",
	"cvsexportcommit",
	"cvsimport",
	"cvsserver",
	"daemon",
	"describe",
	"diff",
	"diff-files",
	"diff-index",
	"diff-tree",
	"difftool",
	"fast-export",
	"fast-import",
	"fetch",
	"fetch-pack",
	"filter-branch",
	"fmt-merge-msg",
	"for-each-ref",
	"format-patch",
	"fsck",
	"fsck-objects",
	"gc",
	"get-tar-commit-id",
	"grep",
	"gui",
	"hash-object",
	"help",
	"http-backend",
	"http-fetch",
	"http-push",
	"index-pack",
	"init",
	"init-db",
	"instaweb",
	"interpret-trailers",
	"lfs",
	"log",
	"ls-files",
	"ls-remote",
	"ls-tree",
	"mailinfo",
	"mailsplit",
	"merge",
	"merge-base",
	"merge-file",
	"merge-index",
	"merge-octopus",
	"merge-one-file",
	"merge-ours",
	"merge-recursive",
	"merge-resolve",
	"merge-subtree",
	"merge-tree",
	"mergetool",
	"mktag",
	"mktree",
	"mv",
	"name-rev",
	"notes",
	"p4",
	"pack-objects",
	"pack-redundant",
	"pack-refs",
	"patch-id",
	"prune",
	"prune-packed",
	"pull",
	"push",
	"quiltimport",
	"range-diff",
	"read-tree",
	"rebase",
	"receive-pack",
	"reflog",
	"remote",
	"remote-ext",
	"remote-fd",
	"remote-ftp",
	"remote-ftps",
	"remote-http",
	"remote-https",
	"remote-testsvn",
	"repack",
	"replace",
	"request-pull",
	"rerere",
	"reset",
	"rev-list",
	"rev-parse",
	"revert",
	"rm",
	"send-email",
	"send-pack",
	"serve",
	"shell",
	"shortlog",
	"show",
	"show-branch",
	"show-index",
	"show-ref",
	"stage",
	"stash",
	"status",
	"stripspace",
	"submodule",
	"subtree",
	"svn",
	"symbolic-ref",
	"tag",
	"unpack-file",
	"unpack-objects",
	"update-index",
	"update-ref",
	"update-server-info",
	"upload-archive",
	"upload-pack",
	"var",
	"verify-commit",
	"verify-pack",
	"verify-tag",
	"whatchanged",
	"worktree",
	"write-tree",
}

/*
txt = `git help -a`

print('\t' + ',\n\t'.join(map(lambda s: f'"{s}"', sorted(filter(lambda s: '--' not in s, txt.split())))))
*/
